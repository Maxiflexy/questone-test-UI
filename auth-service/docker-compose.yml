version: '3.8'

services:

  postgres:
    image: postgres:17-alpine
    container_name: fundquest-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: fundquest_auth
      POSTGRES_USER: fundquest_user
      POSTGRES_PASSWORD: fundquest_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fundquest-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fundquest_user -d fundquest_auth"]
      interval: 30s
      timeout: 10s
      retries: 5


#  auth-service:
#    image: fundquest/auth-service:latest
#    container_name: fundquest-auth-service
#    restart: unless-stopped
#    depends_on:
#      postgres:
#        condition: service_healthy
#    environment:
#      # Database Configuration
#      DATABASE_URL: jdbc:postgresql://postgres:5432/fundquest_auth
#      DATABASE_USERNAME: fundquest_user
#      DATABASE_PASSWORD: fundquest_password
#
#      # Microsoft OAuth2 Configuration (Replace with your actual values)
#      MICROSOFT_CLIENT_ID: ${MICROSOFT_CLIENT_ID:-your-client-id}
#      MICROSOFT_TENANT_ID: ${MICROSOFT_TENANT_ID:-your-tenant-id}
#
#      # JWT Configuration
#      JWT_SECRET: ${JWT_SECRET:-YourSecretKeyHere_PleaseUpdateThis_MustBe256BitsOrLonger_ForHS256Algorithm}
#
#      # CORS Configuration
#      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:3000}
#
#      # Cookie Configuration
#      COOKIE_SECURE: false
#    ports:
#      - "8080:8080"
#    networks:
#      - fundquest-network
#    healthcheck:
#      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/actuator/health || exit 1"]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#      start_period: 60s

volumes:
  postgres_data:
    driver: local

# Custom network
networks:
  fundquest-network:
    driver: bridge