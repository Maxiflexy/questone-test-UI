# Server Configuration
server:
  port: 8010
  servlet:
    context-path: /
  error:
    include-message: always
    include-binding-errors: always

spring:
  application:
    name: auth-service

  # External Database Configuration
  datasource:
    #url: ${DATABASE_URL:jdbc:postgresql://91.134.107.175:5432/fundquest_auth}
    url: jdbc:postgresql://localhost:5432/fundquest_auth
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver

    # Connection pool settings for external database
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      leak-detection-threshold: 60000

    # Flyway Configuration
    flyway:
      enabled: true
      validate-on-migrate: true
      out-of-order: false
      locations: classpath:db/migration
      baseline-on-migrate: true
      baseline-version: 0
      encoding: UTF-8
      sql-migration-prefix: V
      sql-migration-separator: __
      sql-migration-suffixes: .sql

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        generate_statistics: false
        hbm2ddl:
          auto: validate

  jackson:
    serialization:
      write-dates-as-timestamps: false
    time-zone: UTC

api:
  gateway:
    port: ${API_GATEWAY_PORT:8080}


# Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    try-it-out-enabled: true
    operationsSorter: method
    tagsSorter: alpha
    filter: true
    syntax-highlight:
      activated: true
      theme: monokai
    show-extensions: true
    show-common-extensions: true
    default-models-expand-depth: 1
    default-model-expand-depth: 1
    display-request-duration: true
    doc-expansion: none
    persist-authorization: true
    disable-swagger-default-url: true
  show-actuator: false
  writer-with-default-pretty-printer: true
  override-with-generic-response: false
  cache:
    disabled: false
  use-fqn: false

# Eureka Client Configuration
eureka:
  client:
    service-url:
      #defaultZone: http://eureka-server:8761/eureka/
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
    registry-fetch-interval-seconds: 30
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    health-check-url-path: /actuator/health

# Azure OAuth Configuration
azure:
  client-id: ${AZURE_CLIENT_ID:your_clientId}
  client-secret: ${AZURE_CLIENT_SECRET:your_secret}
  tenant-id: ${AZURE_TENANT_ID:your_tenantId}
  redirect-uri: ${AZURE_REDIRECT_URI:http://localhost:3000/auth/callbacks}

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:mySecretKey12345678901234567890123456789012345678901234567890}

# CORS Configuration
#app:
#  cors:
#    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:8010,http://localhost:8080}

# Logging Configuration
logging:
  level:
    com.fundquest.auth: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.springframework.cloud: INFO
    com.netflix.eureka: WARN
    org.springframework.web.reactive.function.client: DEBUG
    org.springdoc: DEBUG
    io.swagger: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management Endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,env,refresh,metrics,openapi,swaggerui
  endpoint:
    health:
      show-details: always
    flyway:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: false