# Server Configuration
server:
  port: 8010
  servlet:
    context-path: /
  error:
    include-message: always
    include-binding-errors: always

spring:
  application:
    name: auth-service

  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/fundquest_auth}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:password}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  jackson:
    serialization:
      write-dates-as-timestamps: false
    time-zone: UTC

# Eureka Client Configuration
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90

# Azure OAuth Configuration
azure:
  client-id: ${AZURE_CLIENT_ID:your_clientId}
  client-secret: ${AZURE_CLIENT_SECRET:your_secret}
  tenant-id: ${AZURE_TENANT_ID:your_tenantId}
  redirect-uri: ${AZURE_REDIRECT_URI:http://localhost:3000/auth/callbacks}

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:mySecretKey12345678901234567890123456789012345678901234567890}

# CORS Configuration
app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,https://yourdomain.com}

# Logging Configuration
logging:
  level:
    com.fundquest.auth: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.springframework.cloud: INFO
    com.netflix.eureka: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"



# Management Endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,env,refresh
  endpoint:
    health:
      show-details: always